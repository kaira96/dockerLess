app.py
print("Hello World")
sudo docker build -t hello-world .
-t тег как назвать образ
. какая директория
Нужно иметь Dockerfile и указать там что и как запускать


sudo docker images
Показывает образы

sudo docker run hello-world
Запускает приложение

sudo docker ps
показывает какие приложения запущены
но здесь будет пусто потому что приложение отработало

sudo docker ps -a
показывает все контейнеры и те которые остановились

sudo docker run --name hello hello-world
запуститлся другой контейнер но на базе уже существующего b но укажет заданное имя

sudo docker rm [передаем либо ID либо NAME]
удаляем запущенное приложение

sudo docker ps -a -q
показывает только ID

sudo docker rm $(docker ps -qa)
удаляем все запущенные приложения



sudo docker build -t hello-world .
перезапускаем


sudo docker run --name hello -d hello-world
-d - запустить приложение в фоне

sudo docker ps
посмотреть статус

sudo docker stop [передаем имя]
остановка контейнера

sudo docker ps -a

sudo docker rm hello

sudo docker run --name hello -d --rm hello-world
автоудаление контейнера после отработки или остановки


============================================


sudo docker build -t web-hello .
собираем новый образ

sudo docker images

sudo docker run --rm --name web web-hello
но из-за изоляции приложений неудастся подключиться



после изменений в Dockerfile
sudo docker build -t web-hello .
заново собираем образ

sudo docker run --rm --name web -p 8080:8080 web-hello

Кстати время может отличаться из-за другой временной зоны в контейнере
исправим это с помощью переменной окружения

после изменений в Dockerfile
sudo docker build -t web-hello .
заново собираем образ

заново запускаем
sudo docker run --rm --name web -p 8080:8080 web-hello

также можно сделать и так
sudo docker run --rm --name web -p -e ENV TZ=Asia/Bishkek 8080:8080 web-hello
























